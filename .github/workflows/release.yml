name: Build and Release

env:
  go-version: "1.22"

on:
  release:
    types: [created]

jobs:
  release:
    name: Release ${{ matrix.name }}

    runs-on: ${{ matrix.image }}

    strategy:
      matrix:
        # build and publish in parallel
        include:
          - image: macos-latest
            name: macos-amd64
            archive: tar.gz
          - image: ubuntu-latest
            name: linux-amd64
            archive: tar.gz
          - image: windows-latest
            name: windows-amd64
            binaryextension: .exe
            archive: zip

    env:
      BINARY_NAME: smcli${{ matrix.binaryextension }}
      ARTIFACT_NAME: smcli-${{ github.event.release.tag_name }}

    steps:
    - name: Set up env
      shell: bash
      run: |
        echo "ARTIFACT_FULL=${{ env.ARTIFACT_NAME }}-${{ matrix.name }}.${{ matrix.archive }}" >> $GITHUB_ENV
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.go-version }}
    - name: Install required packages
      # only run on GH-hosted runner; self-hosted runner already has these
      if: ${{ matrix.name == 'linux-amd64' || matrix.name == 'linux-arm64' }}
      run: sudo apt-get install -y libudev-dev
    - name: Install required packages - Windows
      if: matrix.image == 'windows-latest'
      run: choco install make wget zip
    - name: Build
      run: make build
    - name: Create release archive
      shell: bash
      run: |
        mkdir ${{ env.ARTIFACT_NAME }}
        mv LICENSE README.md ${{ env.BINARY_NAME }} ${{ env.ARTIFACT_NAME }}
        if [ "${{ matrix.archive}}" = "zip" ]; then
          zip -r ${{ env.ARTIFACT_FULL }} ${{ env.ARTIFACT_NAME }}
        else
          tar -czf ${{ env.ARTIFACT_FULL }} ${{ env.ARTIFACT_NAME }}
        fi
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.ARTIFACT_FULL }}
